% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lh_simple_2_vec.R
\name{lh_simple_2_vec}
\alias{lh_simple_2_vec}
\title{Download Pagespeed v5 raport (Lighthouse) for multiple URLs as one data
   frame}
\usage{
lh_simple_2_vec(url, key = Sys.getenv("PAGESPEED_API_KEY"),
  strategy = NULL, categories = "performance", long_result = TRUE,
  interval = 0.5, locale = NULL, utm_campaign = NULL,
  utm_source = NULL)
}
\arguments{
\item{url}{vector of character strings. The URLs to fetch and analyze}

\item{key}{string. Pagespeed API key to authenticate. Defaults to
"PAGESPEED_API_KEY" enviroment variable}

\item{strategy}{string. The analysis strategy to use. Options: "desktop" or
"mobile". Defaults to "desktop"}

\item{categories}{string. A Lighthouse category/categories to run.
Defaults to "performance". See more in Details section}

\item{long_result}{logical. Should the resulting data frame be a long df?}

\item{interval}{numeric. Number of seconds to wait between multiple queries.
Defaults to 0.5 second}

\item{locale}{string. The locale used to localize formatted results}

\item{utm_campaign}{string. Campaign name for analytics. Defaults to NULL}

\item{utm_source}{string. Campaign source for analytics. Defaults to NULL}
}
\value{
formatted data frame
}
\description{
This function can check multiple URLs given in a vector
   and parse them into a one data frame. This data frame doesn't
   contain all the possible information from Pagespeed as response
   cannot be simply parsed into tabular form, but it contains
   most of the metrics, recommendations and error occurences.
}
\details{
This function uses new version of the API (5th).
   Check function \code{ps_simple_2_vec()} for version 4
   (classic Pagespeed results).
   If you need all the information but in form of a nested list,
   use \code{lh_raw_2_vec()}.

   Mind that resulting data frame can have
   literally hundreds/thousands of columns (depending on how many
   \code{categories}
   were selected). This is due to large amount of data returned by
   Lighthouse reports.
}
\examples{
\dontrun{
multiple_urls_simple_output <- lh_simple_2_vec("https://www.google.com/")
}
}
